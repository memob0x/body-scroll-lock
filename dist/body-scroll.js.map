{"version":3,"sources":["body-scroll.mjs"],"names":["global","factory","exports","module","define","amd","self","bodyScroll","$head","document","head","$html","documentElement","$body","body","$style","createElement","isAppleTouchDevice","userAgent","window","navigator","platform","maxTouchPoints","isLegacyIOS","test","isMultiTouchMacAkaIOS13","shouldUsePositionFixedTechnique","scrollPosition","x","y","scrollbarWidth","clientWidth","options","alwaysUsePositionFixedTechnique","isStyleElementInHead","parentNode","insertIndexedRule","rule","index","appendChild","sheet","cssRules","deleteRule","insertRule","insertBaseRules","insertResizableRules","resizeListener","isLocked","disabled","lock","scrollX","scrollY","_clientWidth","style","width","overflow","scroll","dispatchEvent","CustomEvent","detail","addEventListener","unlock","removeEventListener","setOption","name","value","toggle"],"mappings":"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","file":"body-scroll.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('bodyScroll', factory) :\n    (global = global || self, global.bodyScroll = factory());\n}(this, function () { 'use strict';\n\n    // elements involved\n    const $head = document.head;\n    const $html = document.documentElement;\n    const $body = document.body;\n    const $style = document.createElement(\"style\");\n\n    /**\n     * Apple devices recognizer\n     * @param {string} userAgent The browser user agent\n     * @param {string} platform The device platform (eg. window.navigator.platform)\n     * @param {number} maxTouchPoints The device maximum touch points supported\n     * @returns {boolean} True if is an apple touch device\n     */\n    const isAppleTouchDevice = (\n        userAgent = window.navigator.userAgent,\n        platform = window.navigator.platform,\n        maxTouchPoints = window.navigator.maxTouchPoints\n    ) => {\n        const isLegacyIOS = /iPad|iPhone|iPod/.test(userAgent);\n        const isMultiTouchMacAkaIOS13 =\n            platform === \"MacIntel\" && maxTouchPoints > 1;\n        return isLegacyIOS || isMultiTouchMacAkaIOS13;\n    };\n\n    const shouldUsePositionFixedTechnique = isAppleTouchDevice();\n\n    let scrollPosition = {\n        x: 0,\n        y: 0\n    };\n    let scrollbarWidth = 0;\n    let clientWidth = 0;\n\n    let options = {\n        alwaysUsePositionFixedTechnique: false\n    };\n\n    /**\n     * Checks if the style element is in the tag head or not\n     * @returns {boolean} true if present\n     */\n    const isStyleElementInHead = () => $style.parentNode === $head;\n\n    /**\n     * Inserts a rule with the CSSStyleSheet interface\n     * @param {string} rule The CSS rule to add\n     * @param {number} index The index of the CSS rule in the CSSRulesList\n     */\n    const insertIndexedRule = (rule = \"\", index = 0) => {\n        if (!isStyleElementInHead()) {\n            $head.appendChild($style);\n        }\n\n        if ($style.sheet.cssRules[index]) {\n            $style.sheet.deleteRule(index);\n        }\n\n        $style.sheet.insertRule(rule, index);\n    };\n\n    /**\n     * Inserts the CSS rules that doesn't need to be recalculated on resize\n     */\n    const insertBaseRules = () => {\n        insertIndexedRule(\n            `html, body {\n            height: auto!important;\n            margin: 0!important;\n            padding: 0 ${scrollbarWidth}px 0 0!important;\n        }`,\n            0\n        );\n\n        if (\n            shouldUsePositionFixedTechnique ||\n            options.alwaysUsePositionFixedTechnique\n        ) {\n            insertIndexedRule(\n                `html {\n                position: fixed!important;\n                top: ${-1 * scrollPosition.y}px!important;\n                left: ${-1 * scrollPosition.x}px!important;\n                overflow: visible!important;\n            }`,\n                1\n            );\n        } else {\n            insertIndexedRule(\n                `body {\n                overflow: hidden!important;\n            }`,\n                1\n            );\n        }\n    };\n\n    /**\n     * Inserts the CSS rules that need to be recalculated on resize\n     */\n    const insertResizableRules = () =>\n        insertIndexedRule(\n            `html, body {\n            width: ${clientWidth}px!important;\n        }`,\n            2\n        );\n\n    /**\n     *\n     */\n    const resizeListener = () => {\n        clientWidth = $html.clientWidth;\n\n        insertResizableRules();\n    };\n\n    /**\n     * Returns whether the body scroll is locked or not\n     * @returns {boolean} The body scroll lock state\n     */\n    const isLocked = () => isStyleElementInHead() && !$style.disabled;\n\n    /**\n     * Locks the body scroll\n     * @returns {boolean} Whether the lock action has been successful of not (false if already locked)\n     */\n    const lock = () => {\n        if (isLocked()) {\n            return false;\n        }\n\n        if (\n            shouldUsePositionFixedTechnique ||\n            options.alwaysUsePositionFixedTechnique\n        ) {\n            scrollPosition = {\n                x: window.scrollX,\n                y: window.scrollY\n            };\n        }\n\n        const _clientWidth = $html.clientWidth;\n        $body.style.width = $body.clientWidth + \"px\";\n        $html.style.overflow = \"hidden\";\n        clientWidth = $html.clientWidth;\n        scrollbarWidth = clientWidth - _clientWidth;\n        $body.style.width = \"\";\n        $html.style.overflow = \"\";\n\n        insertBaseRules();\n        insertResizableRules();\n\n        $style.disabled = false;\n\n        if (\n            shouldUsePositionFixedTechnique ||\n            options.alwaysUsePositionFixedTechnique\n        ) {\n            window.scroll(0, 0);\n        }\n\n        window.dispatchEvent(\n            new CustomEvent(\"bodyScrollLock\", {\n                detail: {\n                    clientWidth: clientWidth,\n                    scrollbarWidth: scrollbarWidth\n                }\n            })\n        );\n\n        window.addEventListener(\"resize\", resizeListener);\n\n        return true;\n    };\n\n    /**\n     * Unlocks the body scroll\n     * @returns {boolean} Whether the unlock action has been successful of not (false if already unlocked)\n     */\n    const unlock = () => {\n        if (!isLocked()) {\n            return false;\n        }\n\n        $style.disabled = true;\n\n        if (\n            shouldUsePositionFixedTechnique ||\n            options.alwaysUsePositionFixedTechnique\n        ) {\n            window.scroll(scrollPosition.x, scrollPosition.y);\n        }\n\n        window.dispatchEvent(\n            new CustomEvent(\"bodyScrollUnlock\", {\n                detail: {\n                    clientWidth: clientWidth,\n                    scrollbarWidth: scrollbarWidth\n                }\n            })\n        );\n\n        window.removeEventListener(\"resize\", resizeListener);\n\n        return true;\n    };\n\n    const setOption = (name, value) => {\n        if (name in options && typeof value === typeof options[name]) {\n            options[name] = value;\n        }\n    };\n\n    var bodyScroll = {\n        lock: lock,\n        unlock: unlock,\n        toggle: () => (!isLocked() ? lock() : unlock()),\n        isLocked: isLocked,\n        setOption: setOption\n    };\n\n    return bodyScroll;\n\n}));\n"]}