{"version":3,"sources":["body-scroll.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","global","factory","exports","module","define","amd","self","bodyScroll","$head","document","head","$html","documentElement","$body","body","$style","createElement","lckr","a","style","width","concat","clientWidth","overflow","isStyleElementInHead","parentNode","setCssVars","rule","arguments","length","undefined","index","appendChild","sheet","cssRules","deleteRule","insertRule","insertIndexedRule","window","scrollY","scroll","x","y","getScrollPosition","scrollX","saveScrollPosition","restoreScrollPosition","scrollTo","isLocked","disabled","lock","classList","add","addEventListener","unlock","remove","removeEventListener","toggle"],"mappings":"AAAA,aAEA,SAASA,QAAQC,GAAwT,OAAtOD,QAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,IAExV,SAAWK,EAAQC,GACqD,YAAlD,oBAAZC,QAA0B,YAAcR,QAAQQ,WAA4C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAA8B,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAO,aAAcH,IAAYD,EAASA,GAAUM,MAAaC,WAAaN,IAD5Q,MAEG,EAAQ,WAGT,IAAIO,EAAQC,SAASC,KACjBC,EAAQF,SAASG,gBACjBC,EAAQJ,SAASK,KACjBC,EAASN,SAASO,cAAc,SAIhCC,EAAO,SAAcC,GAGvB,OAFAL,EAAMM,MAAMC,MAASF,EAAyC,GAArC,GAAGG,OAAOV,EAAMW,YAAa,MACtDX,EAAMQ,MAAMI,SAAYL,EAAe,GAAX,SACrBP,EAAMW,aAGXE,EAAuB,WACzB,OAAOT,EAAOU,aAAejB,GAkB3BkB,EAAa,YAfO,WACtB,IAAIC,EAAOC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC3EG,EAAQH,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAE3EJ,KACHhB,EAAMwB,YAAYjB,GAGhBA,EAAOkB,MAAMC,SAASH,IACxBhB,EAAOkB,MAAME,WAAWJ,GAG1BhB,EAAOkB,MAAMG,WAAWT,EAAMI,GAI9BM,CAAkB,wBAAwBhB,OA7BpB,yBA6B8C,MAAMA,OAAOiB,OAAOC,QAAS,qBAAqBlB,OA5BzF,gCA4B0H,MAAMA,OAAOJ,EAAK,GAAKA,EAAK,GAAI,oBAGrLuB,EAAS,CACXC,EAAG,EACHC,EAAG,GAGDC,EAAoB,WACtB,MAAO,CACLF,EAAGH,OAAOM,QACVF,EAAGJ,OAAOC,UAIVM,EAAqB,WACvB,OAAOL,EAASG,KAGdG,EAAwB,WAC1B,OAAOR,OAAOS,SAASP,EAAOC,EAAGD,EAAOE,IAKtCM,EAAW,WACb,OAAOxB,MAA2BT,EAAOkC,UAGvCC,EAAO,WACTL,IACA9B,EAAOkC,UAAW,EAClBvB,IACAf,EAAMwC,UAAUC,IAVY,sBAW5Bd,OAAOe,iBAAiB,SAAU3B,IAGhC4B,EAAS,WACX3C,EAAMwC,UAAUI,OAfY,sBAgB5BT,IACA/B,EAAOkC,UAAW,EAClBX,OAAOkB,oBAAoB,SAAU9B,IAevC,MAZiB,CACfA,WAAYA,EACZiB,kBAAmBA,EACnBE,mBAAoBA,EACpBC,sBAAuBA,EACvBI,KAAMA,EACNI,OAAQA,EACRN,SAAUA,EACVS,OAAQ,WACN,OAAOT,IAAaM,IAAWJ","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('bodyScroll', factory) :\n    (global = global || self, global.bodyScroll = factory());\n}(this, (function () { 'use strict';\n\n    const $head = document.head;\n    const $html = document.documentElement;\n    const $body = document.body;\n    const $style = document.createElement(\"style\");\n\n    const SCROLL_Y_VAR_NAME = \"--body-scroll-scroll-y\";\n    const SCROLLBAR_WIDTH_VAR_NAME = \"--body-scroll-scrollbar-width\";\n\n    /**\n     *\n     * @param a\n     */\n    const lckr = a => {\n        $body.style.width = !a ? `${$html.clientWidth}px` : \"\";\n        $html.style.overflow = !a ? \"hidden\" : \"\";\n\n        return $html.clientWidth;\n    };\n\n    /**\n     * Checks if the style element is in the tag head or not\n     * @returns {boolean} true if present\n     */\n    const isStyleElementInHead = () => $style.parentNode === $head;\n\n    /**\n     * Inserts a rule with the CSSStyleSheet interface\n     * @param {string} rule The CSS rule to add\n     * @param {number} index The index of the CSS rule in the CSSRulesList\n     */\n    const insertIndexedRule = (rule = \"\", index = 0) => {\n        if (!isStyleElementInHead()) {\n            $head.appendChild($style);\n        }\n\n        if ($style.sheet.cssRules[index]) {\n            $style.sheet.deleteRule(index);\n        }\n\n        $style.sheet.insertRule(rule, index);\n    };\n\n    /**\n     *\n     */\n    const setCssVars = () => {\n        insertIndexedRule(\n            `:root {\n            ${SCROLL_Y_VAR_NAME}: ${window.scrollY}px;\n            ${SCROLLBAR_WIDTH_VAR_NAME}: ${lckr(0) - lckr(1)}px;\n        }`\n        );\n    };\n    /**\n     *\n     */\n    let scroll = {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     *\n     */\n    const getScrollPosition = () => {\n        return {\n            x: window.scrollX,\n            y: window.scrollY\n        };\n    };\n\n    /**\n     *\n     */\n    const saveScrollPosition = () => (scroll = getScrollPosition());\n\n    /**\n     *\n     */\n    const restoreScrollPosition = () => window.scrollTo(scroll.x, scroll.y);\n\n    const LOCKED_STATUS_CSS_CLASS = \"body-scroll-locked\";\n\n    /**\n     *\n     */\n    /**\n     * Returns whether the body scroll is locked or not\n     * @returns {boolean} The body scroll lock state\n     */\n    const isLocked = () => isStyleElementInHead() && !$style.disabled;\n\n    /**\n     *\n     */\n    const lock = () => {\n        saveScrollPosition();\n        $style.disabled = false;\n        setCssVars();\n        $html.classList.add(LOCKED_STATUS_CSS_CLASS);\n\n        window.addEventListener(\"resize\", setCssVars);\n    };\n\n    /**\n     *\n     */\n    const unlock = () => {\n        $html.classList.remove(LOCKED_STATUS_CSS_CLASS);\n        restoreScrollPosition();\n        $style.disabled = true;\n\n        window.removeEventListener(\"resize\", setCssVars);\n    };\n\n    var bodyScroll = {\n        //\n        setCssVars: setCssVars,\n        getScrollPosition: getScrollPosition,\n        saveScrollPosition: saveScrollPosition,\n        restoreScrollPosition: restoreScrollPosition,\n\n        //\n        lock: lock,\n        unlock: unlock,\n        isLocked: isLocked,\n        toggle: () => (isLocked() ? unlock() : lock())\n    };\n\n    return bodyScroll;\n\n})));\n"],"file":"body-scroll.min.js"}