{"version":3,"sources":["body-scroll.mjs"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","global","factory","exports","module","define","amd","bodyScroll","html","document","documentElement","head","getElementsByTagName","BodyScrollEvent","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","createEvent","initCustomEvent","Event","status","setStatus","bool","state","scroll","top","left","behavior","width","height","body","scrollbars","y","x","settings","important","corrections","defaultCorrection","selector","property","inverted","supportedProperties","styler","createElement","type","id","updateStyle","css","styleSheet","cssText","innerHTML","appendChild","createTextNode","querySelector","remove","setStyle","imp","entry","gap","indexOf","factor","getStyle","lock","vw","vh","innerWidth","innerHeight","clientWidth","clientHeight","scrollTop","scrollLeft","scrollWidth","scrollHeight","dispatchEvent","unlock","scrollTo","timer","addEventListener","clearTimeout","setTimeout","toggle","isLocked","setOptions","options","collection","collectionType","Array","isArray","entryType","push","setCorrections"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('bodyScroll', factory) :\n    (global.bodyScroll = factory());\n}(this, (function () { 'use strict';\n\n    const html = document.documentElement;\n    const head = document.head || document.getElementsByTagName('head')[0];\n\n    const BodyScrollEvent = (() => {\n        if (typeof window.CustomEvent === 'function') {\n            return window.CustomEvent;\n        }\n\n        function CustomEvent(event, params) {\n            params = params || {\n                bubbles: false,\n                cancelable: false,\n                detail: undefined\n            };\n\n            const evt = document.createEvent('CustomEvent');\n\n            evt.initCustomEvent(\n                event,\n                params.bubbles,\n                params.cancelable,\n                params.detail\n            );\n\n            return evt;\n        }\n\n        CustomEvent.prototype = window.Event.prototype;\n\n        return CustomEvent;\n    })();\n\n    let status = false;\n    const setStatus = (bool = true) => (status = bool);\n\n    let state = {\n        scroll: {\n            top: 0,\n            left: 0,\n            behavior: 'auto'\n        },\n        html: {\n            width: 0,\n            height: 0\n        },\n        body: {\n            width: 0,\n            height: 0\n        },\n        scrollbars: {\n            y: 0,\n            x: 0\n        }\n    };\n\n    const setState = () => {\n        const vw = window.innerWidth;\n        const vh = window.innerHeight;\n        const width = html.clientWidth;\n        const height = html.clientHeight;\n        const scroll = {\n            top: html.scrollTop,\n            left: html.scrollLeft\n        };\n        const scrollbars = {\n            y: vw > width ? vw - width : 0,\n            x: vh > height ? vh - height : 0\n        };\n\n        state = {\n            ...state,\n            ...{\n                scroll: scroll,\n                html: {\n                    width: vw + scroll.left - scrollbars.y,\n                    height: vh + scroll.top - scrollbars.x\n                },\n                body: {\n                    width: html.scrollWidth,\n                    height: html.scrollHeight\n                },\n                scrollbars: scrollbars\n            }\n        };\n    };\n\n    let settings = {\n        important: true,\n        corrections: []\n    };\n\n    const defaultCorrection = {\n        selector: null,\n        property: 'margin-right',\n        inverted: false\n    };\n\n    const supportedProperties = [\n        'margin-right',\n        'margin-bottom',\n        'padding-right',\n        'padding-bottom',\n        'right',\n        'bottom'\n    ];\n\n    // TODO: put in setOptions\n    const setCorrections = (collection = []) => {\n        let corrections = [];\n\n        const collectionType = typeof collection;\n        if (\n            collectionType === 'string' ||\n            (!Array.isArray(collection) && collectionType === 'object')\n        ) {\n            collection = [collection];\n        }\n\n        collection.forEach(entry => {\n            if (entry) {\n                const entryType = typeof entry;\n\n                if (entryType === 'string') {\n                    corrections.push({\n                        ...defaultCorrection,\n                        ...{\n                            selector: entry\n                        }\n                    });\n                }\n\n                if (\n                    !Array.isArray(entry) &&\n                    entryType === 'object' &&\n                    entry.selector &&\n                    (!entry.property ||\n                        supportedProperties.indexOf(entry.property) > -1)\n                ) {\n                    corrections.push({\n                        ...defaultCorrection,\n                        ...entry\n                    });\n                }\n            }\n        });\n\n        return corrections;\n    };\n\n    const setOptions = (options = {}) => {\n        if (!status) {\n            settings = {\n                ...settings,\n                ...options\n            };\n            settings.corrections = setCorrections(settings.corrections);\n        }\n    };\n\n    const stylerID = 'body-scroll';\n    const styler = document.createElement('style');\n    styler.type = 'text/css';\n    styler.id = stylerID;\n\n    const setStyle = (css = '') => {\n        if (!css) {\n            styler.remove();\n\n            return;\n        }\n\n        if (styler.styleSheet) {\n            styler.styleSheet.cssText = css;\n        } else {\n            styler.innerHTML = '';\n            styler.appendChild(document.createTextNode(css));\n        }\n\n        if (!head.querySelector(`style#${stylerID}`)) {\n            head.appendChild(styler);\n        }\n    };\n\n    const getStyle = () => {\n        const imp = settings.important ? '!important' : '';\n\n        let css = '';\n\n        if (!status) {\n            css += `html,\n            body {\n            margin: 0${imp};\n            padding: 0${imp};\n            min-width: auto${imp};\n            min-height: auto${imp};\n            max-width: none${imp};\n            max-height: none${imp};\n        }\n\n        html {\n            width: ${state.html.width}px${imp};\n            height: ${state.html.height}px${imp};\n        }\n\n        html {\n            position: fixed${imp};\n            top: ${state.scroll.top * -1}px${imp};\n            left: ${state.scroll.left * -1}px${imp};\n        }\n\n        html,\n            body {\n            overflow: visible${imp};\n        }\n\n        body{\n            width: ${state.body.width}px${imp};\n            height: ${state.body.height}px${imp};\n        }`;\n        }\n\n        const corrections = settings.corrections;\n\n        if (corrections.length) {\n            corrections.forEach(entry => {\n                const gap =\n                    state.scrollbars[\n                        entry.property.indexOf('right') > -1 ? 'y' : 'x'\n                    ];\n\n                if (gap > 0) {\n                    let factor = 1;\n\n                    if (status) {\n                        factor = entry.inverted ? -1 : 0;\n                    }\n\n                    css += `\n                ${entry.selector} {\n                    ${entry.property}: ${gap * factor}px${\n                    settings.important ? '!important' : ''\n                };\n                }`;\n                }\n            });\n        }\n\n        return css;\n    };\n\n    const updateStyle = () => setStyle(getStyle());\n\n    const lock = () => {\n        if (!status) {\n            setState();\n\n            updateStyle();\n\n            setStatus(true);\n\n            window.dispatchEvent(new BodyScrollEvent('bodyScrollLock'));\n        }\n    };\n\n    const unlock = () => {\n        if (status) {\n            updateStyle();\n\n            window.scrollTo(state.scroll);\n\n            setStatus(false);\n\n            window.dispatchEvent(new BodyScrollEvent('bodyScrollUnlock'));\n        }\n    };\n\n    const toggle = () => (!status ? lock() : unlock());\n\n    let timer = null;\n\n    window.addEventListener('resize', () => {\n        clearTimeout(timer);\n        \n        timer = setTimeout(() => {\n            if (status) {\n                unlock();\n\n                lock();\n            }\n        }, 500);\n    });\n\n    var bodyScroll = {\n        lock: lock,\n        unlock: unlock,\n        toggle: toggle,\n        isLocked: () => status,\n        setOptions: setOptions\n    };\n\n    return bodyScroll;\n\n})));\n"],"file":"body-scroll.min.js"}