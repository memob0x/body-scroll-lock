{"version":3,"sources":["src/body-scroll.constants.mjs","src/body-scroll.scroll.mjs","src/body-scroll.api.mjs"],"names":["global","factory","exports","module","define","amd","self","bodyScroll","this","NAMESPACE","$head","document","head","$html","documentElement","$body","body","$style","querySelector","createElement","id","_x","_y","_styleExists","parentNode","_getClientWidth","locked","style","width","clientWidth","overflow","_dispatch","eventName","window","CustomEvent","dispatchEvent","_lock","pageXOffset","pageYOffset","disabled","appendChild","sheet","cssRules","deleteRule","insertRule","scrollY","classList","add","_unlock","remove","scrollTo","restore","_resize","mode","update","isLocked","contains","Object","freeze","__proto__","lock","unlock"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAC9D,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAO,aAAcH,IACjED,EAASA,GAAUM,MAAaC,WAAaN,IAHlD,CAIEO,KAAM,WAAe,aAEnB,MAAMC,EAAY,mBAEZC,EAAQC,SAASC,KACjBC,EAAQF,SAASG,gBACjBC,EAAQJ,SAASK,KAEjBC,EACFP,EAAMQ,kBAAkBT,MACxB,MACI,MAAMQ,EAASN,SAASQ,cAAc,SAItC,OAFAF,EAAOG,GAAKX,EAELQ,GALX,GAWJ,IAAII,EAAK,EACLC,EAAK,EAKT,MAcMC,EAAe,IAAMN,EAAOO,aAAed,EAO3Ce,EAAkBC,IACpBX,EAAMY,MAAMC,MAAQF,KAAYb,EAAMgB,gBAAkB,GACxDhB,EAAMc,MAAMG,SAAWJ,EAAS,SAAW,GAEpCb,EAAMgB,aAOXE,EAAYC,GACgB,mBAAvBC,OAAOC,YACRD,OAAOE,cAAc,IAAID,YAAYF,IACrC,OAKJI,EAAQ,KAvCVf,EAAKY,OAAOI,YACZf,EAAKW,OAAOK,YAwCZrB,EAAOsB,UAAW,EAIbhB,KACDb,EAAM8B,YAAYvB,GAGlBA,EAAOwB,MAAMC,SANH,IAOVzB,EAAOwB,MAAME,WAPH,GAUd1B,EAAOwB,MAAMG,qCAELnC,gBAAyC,EAAlBwB,OAAOY,uCAC9BpC,oBAA4BgB,GAAgB,GAChDA,GAAgB,6BAdN,GAmBdZ,EAAMiC,UAAUC,IAAItC,IAMlBuC,EAAU,KACZnC,EAAMiC,UAAUG,OAAOxC,GA9DX,KAAMwB,OAAOiB,SAAS7B,EAAIC,GAgEtC6B,GAEAlC,EAAOsB,UAAW,GAMhBa,EAAUC,GAAQpB,UAAUoB,kBAAqB,SAAUC,GAS3DC,EAAW,IACbhC,MAAmBN,EAAOsB,UAAY1B,EAAMiC,UAAUU,SAAS/C,GAK7D6C,EAAS,KACNC,MAILP,IAEAZ,MAiCJ,OARuBqB,OAAOC,OAAO,CACjCC,UAAW,KACXJ,SAAUA,EACVD,OAAQA,EACRM,KAvBS,KACTxB,IAEAL,EAAU,kBAEVqB,EAAQ,QAmBRS,OAbW,KACXb,IAEAjB,EAAU,oBAEVqB,EAAQ","sourcesContent":["export const NAMESPACE = \"body-scroll-lock\";\r\n\r\nexport const $head = document.head;\r\nexport const $html = document.documentElement;\r\nexport const $body = document.body;\r\n\r\nexport const $style =\r\n    $head.querySelector(`#${NAMESPACE}`) ||\r\n    (() => {\r\n        const $style = document.createElement(\"style\");\r\n\r\n        $style.id = NAMESPACE;\r\n\r\n        return $style;\r\n    })();\r\n","/**\r\n *\r\n */\r\nlet _x = 0;\r\nlet _y = 0;\r\n\r\n/**\r\n *\r\n */\r\nexport const save = () => {\r\n    _x = window.pageXOffset;\r\n    _y = window.pageYOffset;\r\n};\r\n\r\n/**\r\n *\r\n */\r\nexport const restore = () => window.scrollTo(_x, _y);\r\n","import {\r\n    NAMESPACE,\r\n    $head,\r\n    $html,\r\n    $body,\r\n    $style\r\n} from \"./body-scroll.constants.mjs\";\r\n\r\nimport * as Scroll from \"./body-scroll.scroll.mjs\";\r\n\r\n/**\r\n * Checks if the style element is in the tag head or not\r\n * @returns {boolean} true if present\r\n */\r\nconst _styleExists = () => $style.parentNode === $head;\r\n\r\n/**\r\n *\r\n * @param {boolean} locked\r\n * @returns {number}\r\n */\r\nconst _getClientWidth = locked => {\r\n    $body.style.width = locked ? `${$html.clientWidth}px` : \"\";\r\n    $html.style.overflow = locked ? \"hidden\" : \"\";\r\n\r\n    return $html.clientWidth;\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} eventName\r\n */\r\nconst _dispatch = eventName =>\r\n    typeof window.CustomEvent === \"function\"\r\n        ? window.dispatchEvent(new CustomEvent(eventName))\r\n        : () => {};\r\n\r\n/**\r\n *\r\n */\r\nconst _lock = () => {\r\n    Scroll.save();\r\n    $style.disabled = false;\r\n\r\n    const index = 0;\r\n\r\n    if (!_styleExists()) {\r\n        $head.appendChild($style);\r\n    }\r\n\r\n    if ($style.sheet.cssRules[index]) {\r\n        $style.sheet.deleteRule(index);\r\n    }\r\n\r\n    $style.sheet.insertRule(\r\n        `:root {\r\n            --${NAMESPACE}-top-rect: ${window.scrollY * -1}px!important;\r\n            --${NAMESPACE}-scrollbar-gap: ${_getClientWidth(true) -\r\n            _getClientWidth(false)}px!important;\r\n        }`,\r\n        index\r\n    );\r\n\r\n    $html.classList.add(NAMESPACE);\r\n};\r\n\r\n/**\r\n *\r\n */\r\nconst _unlock = () => {\r\n    $html.classList.remove(NAMESPACE);\r\n\r\n    Scroll.restore();\r\n\r\n    $style.disabled = true;\r\n};\r\n\r\n/**\r\n *\r\n */\r\nconst _resize = mode => window[`${mode}EventListener`](\"resize\", update);\r\n\r\n/**\r\n *\r\n */\r\n/**\r\n * Returns whether the body scroll is locked or not\r\n * @returns {boolean} The body scroll lock state\r\n */\r\nexport const isLocked = () =>\r\n    _styleExists() && !$style.disabled && $html.classList.contains(NAMESPACE);\r\n\r\n/**\r\n *\r\n */\r\nexport const update = () => {\r\n    if (!isLocked()) {\r\n        return;\r\n    }\r\n\r\n    _unlock();\r\n\r\n    _lock();\r\n};\r\n\r\n/**\r\n *\r\n */\r\nexport const lock = () => {\r\n    _lock();\r\n\r\n    _dispatch(\"bodyscrolllock\");\r\n\r\n    _resize(\"add\");\r\n};\r\n\r\n/**\r\n *\r\n */\r\nexport const unlock = () => {\r\n    _unlock();\r\n\r\n    _dispatch(\"bodyscrollunlock\");\r\n\r\n    _resize(\"remove\");\r\n};\r\n"],"file":"body-scroll.min.js"}