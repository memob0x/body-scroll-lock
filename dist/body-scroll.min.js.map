{"version":3,"sources":["src/body-scroll.constants.mjs","src/body-scroll.scroll.mjs","src/body-scroll.api.mjs"],"names":["global","factory","exports","module","define","amd","self","bodyScroll","this","NAMESPACE","$head","document","head","$html","documentElement","$body","body","$style","querySelector","createElement","id","_x","_y","_styleExists","parentNode","_getClientWidth","locked","style","width","getBoundingClientRect","overflow","_dispatch","eventName","window","CustomEvent","dispatchEvent","_lock","pageXOffset","pageYOffset","disabled","appendChild","sheet","cssRules","deleteRule","insertRule","scrollY","classList","add","_unlock","remove","scrollTo","restore","_resize","mode","update","isLocked","contains","Object","freeze","__proto__","lock","unlock"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAC9D,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAO,aAAcH,IACjED,EAASA,GAAUM,MAAaC,WAAaN,IAHlD,CAIEO,KAAM,WAAe,aAEnB,MAAMC,EAAY,mBAEZC,EAAQC,SAASC,KACjBC,EAAQF,SAASG,gBACjBC,EAAQJ,SAASK,KAEjBC,EACFP,EAAMQ,kBAAkBT,MACxB,MACI,MAAMQ,EAASN,SAASQ,cAAc,SAItC,OAFAF,EAAOG,GAAKX,EAELQ,GALX,GAWJ,IAAII,EAAK,EACLC,EAAK,EAKT,MAcMC,EAAe,IAAMN,EAAOO,aAAed,EAO3Ce,EAAkBC,IACpBX,EAAMY,MAAMC,MAAQF,KACXb,EAAMgB,wBAAwBD,UACjC,GACNf,EAAMc,MAAMG,SAAWJ,EAAS,SAAW,GAEpCb,EAAMgB,wBAAwBD,OAOnCG,EAAYC,GACgB,mBAAvBC,OAAOC,YACRD,OAAOE,cAAc,IAAID,YAAYF,IACrC,OAKJI,EAAQ,KAzCVf,EAAKY,OAAOI,YACZf,EAAKW,OAAOK,YA0CZrB,EAAOsB,UAAW,EAIbhB,KACDb,EAAM8B,YAAYvB,GAGlBA,EAAOwB,MAAMC,SANH,IAOVzB,EAAOwB,MAAME,WAPH,GAUd1B,EAAOwB,MAAMG,qCAELnC,gBAAyC,EAAlBwB,OAAOY,uCAC9BpC,oBAA4BgB,GAAgB,GAChDA,GAAgB,6BAdN,GAmBdZ,EAAMiC,UAAUC,IAAItC,IAMlBuC,EAAU,KACZnC,EAAMiC,UAAUG,OAAOxC,GAhEX,KAAMwB,OAAOiB,SAAS7B,EAAIC,GAkEtC6B,GAEAlC,EAAOsB,UAAW,GAMhBa,EAAUC,GAAQpB,UAAUoB,kBAAqB,SAAUC,GAS3DC,EAAW,IACbhC,MAAmBN,EAAOsB,UAAY1B,EAAMiC,UAAUU,SAAS/C,GAK7D6C,EAAS,KACNC,MAILP,IAEAZ,MAiCJ,OARuBqB,OAAOC,OAAO,CACjCC,UAAW,KACXJ,SAAUA,EACVD,OAAQA,EACRM,KAvBS,KACTxB,IAEAL,EAAU,kBAEVqB,EAAQ,QAmBRS,OAbW,KACXb,IAEAjB,EAAU,oBAEVqB,EAAQ","sourcesContent":["export const NAMESPACE = \"body-scroll-lock\";\n\nexport const $head = document.head;\nexport const $html = document.documentElement;\nexport const $body = document.body;\n\nexport const $style =\n    $head.querySelector(`#${NAMESPACE}`) ||\n    (() => {\n        const $style = document.createElement(\"style\");\n\n        $style.id = NAMESPACE;\n\n        return $style;\n    })();\n","/**\n *\n */\nlet _x = 0;\nlet _y = 0;\n\n/**\n *\n */\nexport const save = () => {\n    _x = window.pageXOffset;\n    _y = window.pageYOffset;\n};\n\n/**\n *\n */\nexport const restore = () => window.scrollTo(_x, _y);\n","import {\n    NAMESPACE,\n    $head,\n    $html,\n    $body,\n    $style\n} from \"./body-scroll.constants.mjs\";\n\nimport * as Scroll from \"./body-scroll.scroll.mjs\";\n\n/**\n * Checks if the style element is in the tag head or not\n * @returns {boolean} true if present\n */\nconst _styleExists = () => $style.parentNode === $head;\n\n/**\n *\n * @param {boolean} locked\n * @returns {number}\n */\nconst _getClientWidth = locked => {\n    $body.style.width = locked\n        ? `${$html.getBoundingClientRect().width}px`\n        : \"\";\n    $html.style.overflow = locked ? \"hidden\" : \"\";\n\n    return $html.getBoundingClientRect().width;\n};\n\n/**\n *\n * @param {string} eventName\n */\nconst _dispatch = eventName =>\n    typeof window.CustomEvent === \"function\"\n        ? window.dispatchEvent(new CustomEvent(eventName))\n        : () => {};\n\n/**\n *\n */\nconst _lock = () => {\n    Scroll.save();\n    $style.disabled = false;\n\n    const index = 0;\n\n    if (!_styleExists()) {\n        $head.appendChild($style);\n    }\n\n    if ($style.sheet.cssRules[index]) {\n        $style.sheet.deleteRule(index);\n    }\n\n    $style.sheet.insertRule(\n        `:root {\n            --${NAMESPACE}-top-rect: ${window.scrollY * -1}px!important;\n            --${NAMESPACE}-scrollbar-gap: ${_getClientWidth(true) -\n            _getClientWidth(false)}px!important;\n        }`,\n        index\n    );\n\n    $html.classList.add(NAMESPACE);\n};\n\n/**\n *\n */\nconst _unlock = () => {\n    $html.classList.remove(NAMESPACE);\n\n    Scroll.restore();\n\n    $style.disabled = true;\n};\n\n/**\n *\n */\nconst _resize = mode => window[`${mode}EventListener`](\"resize\", update);\n\n/**\n *\n */\n/**\n * Returns whether the body scroll is locked or not\n * @returns {boolean} The body scroll lock state\n */\nexport const isLocked = () =>\n    _styleExists() && !$style.disabled && $html.classList.contains(NAMESPACE);\n\n/**\n *\n */\nexport const update = () => {\n    if (!isLocked()) {\n        return;\n    }\n\n    _unlock();\n\n    _lock();\n};\n\n/**\n *\n */\nexport const lock = () => {\n    _lock();\n\n    _dispatch(\"bodyscrolllock\");\n\n    _resize(\"add\");\n};\n\n/**\n *\n */\nexport const unlock = () => {\n    _unlock();\n\n    _dispatch(\"bodyscrollunlock\");\n\n    _resize(\"remove\");\n};\n"],"file":"body-scroll.min.js"}