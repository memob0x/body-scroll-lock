{"version":3,"sources":["body-scroll.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","global","factory","exports","module","define","amd","self","bodyScroll","$head","document","head","$html","documentElement","$body","body","$style","createElement","supportsCustomEvents","window","CustomEvent","CssVars","getClientWidth","locked","style","width","concat","clientWidth","overflow","isStyleElementInHead","parentNode","setCssVars","rule","arguments","length","undefined","index","appendChild","sheet","cssRules","deleteRule","insertRule","insertIndexedRule","scrollY","scroll","x","y","saveScrollPosition","scrollX","isLocked","disabled","classList","contains","update","_unlock","_lock","add","lock","dispatchEvent","addEventListener","remove","scrollTo","unlock","removeEventListener","toggle"],"mappings":"AAAA,aAEA,SAASA,QAAQC,GAAwT,OAAtOD,QAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,IAExV,SAAWK,EAAQC,GACqD,YAAlD,oBAAZC,QAA0B,YAAcR,QAAQQ,WAA4C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAA8B,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAO,aAAcH,IAAYD,EAASA,GAAUM,MAAaC,WAAaN,IAD5Q,MAEG,EAAQ,WAGT,IAAIO,EAAQC,SAASC,KACjBC,EAAQF,SAASG,gBACjBC,EAAQJ,SAASK,KACjBC,EAASN,SAASO,cAAc,SAChCC,EAAqD,mBAAvBC,OAAOC,YACrCC,EACQ,yBADRA,EAEe,gCAGfC,EAAiB,SAAwBC,GAG3C,OAFAT,EAAMU,MAAMC,MAAQF,EAAS,GAAGG,OAAOd,EAAMe,YAAa,MAAQ,GAClEf,EAAMY,MAAMI,SAAWL,EAAS,SAAW,GACpCX,EAAMe,aAGXE,EAAuB,WACzB,OAAOb,EAAOc,aAAerB,GAkB3BsB,EAAa,YAfO,WACtB,IAAIC,EAAOC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC3EG,EAAQH,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAE3EJ,KACHpB,EAAM4B,YAAYrB,GAGhBA,EAAOsB,MAAMC,SAASH,IACxBpB,EAAOsB,MAAME,WAAWJ,GAG1BpB,EAAOsB,MAAMG,WAAWT,EAAMI,GAI9BM,CAAkB,wBAAwBhB,OAAOL,EAAkB,MAAMK,OAAOP,OAAOwB,QAAS,qBAAqBjB,OAAOL,EAAyB,MAAMK,OAAOJ,GAAe,GAAQA,GAAe,GAAQ,oBAG9MsB,EAAS,CACXC,EAAG,EACHC,EAAG,GAUDC,EAAqB,WACvB,OAAOH,EAPA,CACLC,EAAG1B,OAAO6B,QACVF,EAAG3B,OAAOwB,UAcVM,EAAW,WACb,OAAOpB,MAA2Bb,EAAOkC,UAAYtC,EAAMuC,UAAUC,SAHzC,uBAM1BC,EAAS,WACNJ,MAILK,IAEAC,MAGEA,EAAQ,WACVR,IACA/B,EAAOkC,UAAW,EAClBnB,IACAnB,EAAMuC,UAAUK,IApBY,uBAuB1BC,EAAO,WACTF,IAEIrC,GACFC,OAAOuC,cAAc,IAAItC,YAAY,mBAGvCD,OAAOwC,iBAAiB,SAAUN,IAGhCC,EAAU,WACZ1C,EAAMuC,UAAUS,OAlCY,sBAHrBzC,OAAO0C,SAASjB,EAAOC,EAAGD,EAAOE,GAuCxC9B,EAAOkC,UAAW,GAGhBY,EAAS,WACXR,IAEIpC,GACFC,OAAOuC,cAAc,IAAItC,YAAY,qBAGvCD,OAAO4C,oBAAoB,SAAUV,IAYvC,MATiB,CACfI,KAAMA,EACNK,OAAQA,EACRb,SAAUA,EACVe,OAAQ,WACN,OAAOf,IAAaa,IAAWL,KAEjCJ,OAAQA","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('bodyScroll', factory) :\n    (global = global || self, global.bodyScroll = factory());\n}(this, (function () { 'use strict';\n\n    const $head = document.head;\n    const $html = document.documentElement;\n    const $body = document.body;\n    const $style = document.createElement(\"style\");\n    const supportsCustomEvents = typeof window.CustomEvent === \"function\";\n\n    const CssVars = {\n        SCROLL_Y: \"--body-scroll-scroll-y\",\n        SCROLLBAR_WIDTH: \"--body-scroll-scrollbar-width\"\n    };\n\n    /**\n     *\n     * @param state\n     */\n    const getClientWidth = locked => {\n        $body.style.width = locked ? `${$html.clientWidth}px` : \"\";\n        $html.style.overflow = locked ? \"hidden\" : \"\";\n\n        return $html.clientWidth;\n    };\n\n    /**\n     * Checks if the style element is in the tag head or not\n     * @returns {boolean} true if present\n     */\n    const isStyleElementInHead = () => $style.parentNode === $head;\n\n    /**\n     * Inserts a rule with the CSSStyleSheet interface\n     * @param {string} rule The CSS rule to add\n     * @param {number} index The index of the CSS rule in the CSSRulesList\n     */\n    const insertIndexedRule = (rule = \"\", index = 0) => {\n        if (!isStyleElementInHead()) {\n            $head.appendChild($style);\n        }\n\n        if ($style.sheet.cssRules[index]) {\n            $style.sheet.deleteRule(index);\n        }\n\n        $style.sheet.insertRule(rule, index);\n    };\n\n    /**\n     *\n     */\n    const setCssVars = () => {\n        insertIndexedRule(\n            `:root {\n            ${CssVars.SCROLL_Y}: ${window.scrollY}px;\n            ${CssVars.SCROLLBAR_WIDTH}: ${getClientWidth(true) -\n            getClientWidth(false)}px;\n        }`\n        );\n    };\n\n    /**\n     *\n     */\n    let scroll = {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     *\n     */\n    const getScrollPosition = () => {\n        return {\n            x: window.scrollX,\n            y: window.scrollY\n        };\n    };\n\n    /**\n     *\n     */\n    const saveScrollPosition = () => (scroll = getScrollPosition());\n\n    /**\n     *\n     */\n    const restoreScrollPosition = () => window.scrollTo(scroll.x, scroll.y);\n\n    const LOCKED_STATUS_CSS_CLASS = \"body-scroll-locked\";\n\n    /**\n     *\n     */\n    /**\n     * Returns whether the body scroll is locked or not\n     * @returns {boolean} The body scroll lock state\n     */\n    const isLocked = () =>\n        isStyleElementInHead() &&\n        !$style.disabled &&\n        $html.classList.contains(LOCKED_STATUS_CSS_CLASS);\n\n    /**\n     *\n     */\n    const update = () => {\n        if (!isLocked()) {\n            return;\n        }\n\n        _unlock();\n\n        _lock();\n    };\n\n    /**\n     *\n     */\n    const _lock = () => {\n        saveScrollPosition();\n        $style.disabled = false;\n        setCssVars();\n        $html.classList.add(LOCKED_STATUS_CSS_CLASS);\n    };\n\n    /**\n     *\n     */\n    const lock = () => {\n        _lock();\n\n        if (supportsCustomEvents) {\n            window.dispatchEvent(new CustomEvent(\"bodyScrollLock\"));\n        }\n\n        window.addEventListener(\"resize\", update);\n    };\n\n    /**\n     *\n     */\n    const _unlock = () => {\n        $html.classList.remove(LOCKED_STATUS_CSS_CLASS);\n        restoreScrollPosition();\n        $style.disabled = true;\n    };\n\n    /**\n     *\n     */\n    const unlock = () => {\n        _unlock();\n\n        if (supportsCustomEvents) {\n            window.dispatchEvent(new CustomEvent(\"bodyScrollUnlock\"));\n        }\n\n        window.removeEventListener(\"resize\", update);\n    };\n\n    var bodyScroll = {\n        lock: lock,\n        unlock: unlock,\n        isLocked: isLocked,\n        toggle: () => (isLocked() ? unlock() : lock()),\n        update: update\n    };\n\n    return bodyScroll;\n\n})));\n"],"file":"body-scroll.min.js"}