{"version":3,"sources":["body-scroll.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","global","factory","exports","module","define","amd","self","bodyScroll","$head","document","head","$html","documentElement","$body","body","supportsCustomEvents","window","CustomEvent","getOrCreateUniqueStyleElement","id","querySelector","concat","$style","createElement","isStyleElementInHead","parentNode","insertIndexedRuleInStyleElement","rule","arguments","length","undefined","index","appendChild","sheet","cssRules","deleteRule","insertRule","$locker","CssVars","getClientWidth","locked","style","width","clientWidth","overflow","getComputedStyle","getPropertyValue","scroll","x","y","saveScrollPosition","Object","scrollX","scrollY","isLocked","disabled","classList","contains","update","_unlock","_lock","add","lock","dispatchEvent","addEventListener","remove","scrollTo","unlock","removeEventListener","toggle"],"mappings":"AAAA,aAEA,SAASA,QAAQC,GAAwT,OAAtOD,QAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,IAExV,SAAWK,EAAQC,GACqD,YAAlD,oBAAZC,QAA0B,YAAcR,QAAQQ,WAA4C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAA8B,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAO,aAAcH,IAAYD,EAASA,GAAUM,MAAaC,WAAaN,IAD5Q,MAEG,EAAQ,WAGT,IAAIO,EAAQC,SAASC,KACjBC,EAAQF,SAASG,gBACjBC,EAAQJ,SAASK,KACjBC,EAAqD,mBAAvBC,OAAOC,YAErCC,EAAgC,SAAuCC,GACzE,OAAOX,EAAMY,cAAc,IAAIC,OAAOF,OAChCG,EAASb,SAASc,cAAc,UAC7BJ,GAAKA,EACLG,GAHqC,IACxCA,GAMJE,EAAuB,SAA8BF,GACvD,OAAOA,EAAOG,aAAejB,GAG3BkB,EAAkC,SAAyCJ,GAC7E,IAAIK,EAAOC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC3EG,EAAQH,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAWhF,OATKJ,EAAqBF,IACxBd,EAAMwB,YAAYV,GAGhBA,EAAOW,MAAMC,SAASH,IACxBT,EAAOW,MAAME,WAAWJ,GAG1BT,EAAOW,MAAMG,WAAWT,EAAMI,GACvBT,GAGLe,EAAUnB,EAA8B,sBACxCoB,EACQ,yBADRA,EAEe,gCAGfC,EAAiB,SAAwBC,GAG3C,OAFA3B,EAAM4B,MAAMC,MAAQF,EAAS,GAAGnB,OAAOV,EAAMgC,YAAa,MAAQ,GAClEhC,EAAM8B,MAAMG,SAAWJ,EAAS,SAAW,GACpC7B,EAAMgC,aAOR3B,OAAO6B,iBAAiBlC,GAAOmC,iBAAiBR,IACrDZ,EAAgCR,EAA8B,wBAAyB,wBAAwBG,OAAOiB,EAAyB,oBAGjJ,IAAIS,EAAS,CACXC,EAAG,EACHC,EAAG,GAUDC,EAAqB,WACvB,OAAOH,EAPA,IAAII,OAAO,CAChBH,EAAGhC,OAAOoC,QACVH,EAAGjC,OAAOqC,WAcVC,EAAW,WACb,OAAO9B,EAAqBa,KAAaA,EAAQkB,UAAY5C,EAAM6C,UAAUC,SAHjD,uBAM1BC,EAAS,WACNJ,MAILK,IAEAC,MAGEA,EAAQ,WACVV,IACAb,EAAQkB,UAAW,EA7CnB7B,EAAgCW,EAAS,wBAAwBhB,OAAOiB,EAAkB,MAAMjB,OAAOL,OAAOqC,QAAS,+BAA+BhC,OAAOiB,EAAyB,MAAMjB,OAAOkB,GAAe,GAAQA,GAAe,GAAQ,6BA+CjP5B,EAAM6C,UAAUK,IApBY,uBAuB1BC,EAAO,WACTF,IAEI7C,GACFC,OAAO+C,cAAc,IAAI9C,YAAY,mBAGvCD,OAAOgD,iBAAiB,SAAUN,IAGhCC,EAAU,WACZhD,EAAM6C,UAAUS,OAlCY,sBAHrBjD,OAAOkD,SAASnB,EAAOC,EAAGD,EAAOE,GAuCxCZ,EAAQkB,UAAW,GAGjBY,EAAS,WACXR,IAEI5C,GACFC,OAAO+C,cAAc,IAAI9C,YAAY,qBAGvCD,OAAOoD,oBAAoB,SAAUV,IAYvC,MATiB,CACfI,KAAMA,EACNK,OAAQA,EACRb,SAAUA,EACVe,OAAQ,WACN,OAAOf,IAAaa,IAAWL,KAEjCJ,OAAQA","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('bodyScroll', factory) :\n    (global = global || self, global.bodyScroll = factory());\n}(this, (function () { 'use strict';\n\n    const $head = document.head;\n    const $html = document.documentElement;\n    const $body = document.body;\n\n    const supportsCustomEvents = typeof window.CustomEvent === \"function\";\n\n    /**\n     *\n     * @param {string} id\n     * @returns {HTMLStyleElement}\n     */\n    const getOrCreateUniqueStyleElement = id => {\n        return (\n            $head.querySelector(`#${id}`) ||\n            (() => {\n                const $style = document.createElement(\"style\");\n                $style.id = id;\n                return $style;\n            })()\n        );\n    };\n\n    /**\n     * Checks if the style element is in the tag head or not\n     * @param {HTMLLinkElement} $style\n     * @returns {boolean} true if present\n     */\n    const isStyleElementInHead = $style => $style.parentNode === $head;\n\n    /**\n     * Inserts a rule with the CSSStyleSheet interface\n     * @param {HTMLLinkElement} $style\n     * @param {string} rule The CSS rule to add\n     * @param {number} index The index of the CSS rule in the CSSRulesList\n     */\n    const insertIndexedRuleInStyleElement = (\n        $style,\n        rule = \"\",\n        index = 0\n    ) => {\n        if (!isStyleElementInHead($style)) {\n            $head.appendChild($style);\n        }\n\n        if ($style.sheet.cssRules[index]) {\n            $style.sheet.deleteRule(index);\n        }\n\n        $style.sheet.insertRule(rule, index);\n\n        return $style;\n    };\n\n    /**\n     *\n     */\n    const $locker = getOrCreateUniqueStyleElement(\"body-scroll-locker\");\n\n    /**\n     *\n     */\n    const CssVars = {\n        SCROLL_Y: \"--body-scroll-scroll-y\",\n        SCROLLBAR_WIDTH: \"--body-scroll-scrollbar-width\"\n    };\n\n    /**\n     *\n     * @param locked\n     */\n    const getClientWidth = locked => {\n        $body.style.width = locked ? `${$html.clientWidth}px` : \"\";\n        $html.style.overflow = locked ? \"hidden\" : \"\";\n\n        return $html.clientWidth;\n    };\n\n    /**\n     *\n     */\n    const setLockerCssVars = () => {\n        insertIndexedRuleInStyleElement(\n            $locker,\n            `:root {\n            ${CssVars.SCROLL_Y}: ${window.scrollY}px!important;\n            ${CssVars.SCROLLBAR_WIDTH}: ${getClientWidth(true) -\n            getClientWidth(false)}px!important;\n        }`\n        );\n    };\n\n    /**\n     *\n     */\n    if (\n        !!!window.getComputedStyle($html).getPropertyValue(CssVars.SCROLLBAR_WIDTH)\n    ) {\n        insertIndexedRuleInStyleElement(\n            getOrCreateUniqueStyleElement(\"body-scroll-defaults\"),\n            `:root {\n            ${CssVars.SCROLLBAR_WIDTH}: 0;\n        }`\n        );\n    }\n\n    /**\n     *\n     */\n    let scroll = {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     *\n     */\n    const getScrollPosition = () =>\n        new Object({\n            x: window.scrollX,\n            y: window.scrollY\n        });\n\n    /**\n     *\n     */\n    const saveScrollPosition = () => (scroll = getScrollPosition());\n\n    /**\n     *\n     */\n    const restoreScrollPosition = () => window.scrollTo(scroll.x, scroll.y);\n\n    /**\n     *\n     */\n    const LOCKED_STATUS_CSS_CLASS = \"body-scroll-locked\";\n\n    /**\n     *\n     */\n    /**\n     * Returns whether the body scroll is locked or not\n     * @returns {boolean} The body scroll lock state\n     */\n    const isLocked = () =>\n        isStyleElementInHead($locker) &&\n        !$locker.disabled &&\n        $html.classList.contains(LOCKED_STATUS_CSS_CLASS);\n\n    /**\n     *\n     */\n    const update = () => {\n        if (!isLocked()) {\n            return;\n        }\n\n        _unlock();\n\n        _lock();\n    };\n\n    /**\n     *\n     */\n    const _lock = () => {\n        saveScrollPosition();\n        $locker.disabled = false;\n        setLockerCssVars();\n        $html.classList.add(LOCKED_STATUS_CSS_CLASS);\n    };\n\n    /**\n     *\n     */\n    const lock = () => {\n        _lock();\n\n        if (supportsCustomEvents) {\n            window.dispatchEvent(new CustomEvent(\"bodyScrollLock\"));\n        }\n\n        window.addEventListener(\"resize\", update);\n    };\n\n    /**\n     *\n     */\n    const _unlock = () => {\n        $html.classList.remove(LOCKED_STATUS_CSS_CLASS);\n        restoreScrollPosition();\n        $locker.disabled = true;\n    };\n\n    /**\n     *\n     */\n    const unlock = () => {\n        _unlock();\n\n        if (supportsCustomEvents) {\n            window.dispatchEvent(new CustomEvent(\"bodyScrollUnlock\"));\n        }\n\n        window.removeEventListener(\"resize\", update);\n    };\n\n    var bodyScroll = {\n        lock: lock,\n        unlock: unlock,\n        isLocked: isLocked,\n        toggle: () => (isLocked() ? unlock() : lock()),\n        update: update\n    };\n\n    return bodyScroll;\n\n})));\n"],"file":"body-scroll.min.js"}