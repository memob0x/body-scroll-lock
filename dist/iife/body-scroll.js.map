{"version":3,"file":"body-scroll.js","sources":["../../src/body-scroll.client.mjs","../../src/body-scroll.utils.mjs","../../src/body-scroll.scroll.mjs","../../src/body-scroll.style.mjs","../../src/body-scroll.state.mjs","../../src/body-scroll.resize.mjs","../../src/body-scroll.mjs"],"sourcesContent":["// caching involved dom elements\nexport const head = document.head;\nexport const body = document.body;\nexport const html = document.documentElement;\nexport const styler = document.createElement(\"style\");\n\n// all the custom events dispatched by the library will start with this string\n// in order to avoid name clashing\nexport const eventNamePrefix = \"bodyscroll\";\n\n/**\n * Dispatches the given message name in jQuery.Event\n * @private\n * @param {String} messageName The given message name to be dispatched\n * @returns {void} Nothing\n */\nexport const dispatchEvent = (messageName) =>\n    typeof window.CustomEvent === \"function\"\n        ? window.dispatchEvent(\n              new CustomEvent(`${eventNamePrefix}${messageName}`)\n          )\n        : () => {};\n\n//\nexport const lockedStateCssClass = \"body-scroll-lock\";\n\n/**\n * Toggles the locked state css class to html element\n * @param {Boolean} bool Whether the class should be added ro removed\n * @returns {Boolean} Whether the removal or the\n */\nconst toggleLockedCssClass = (bool) => {\n    const hadClass = html.classList.contains(lockedStateCssClass);\n\n    bool = bool ?? !hadClass;\n\n    html.classList.toggle(lockedStateCssClass, bool);\n\n    return (bool && !hadClass) || (!bool && hadClass);\n};\n\n/**\n *\n * @returns {Boolean}\n */\nexport const addLockedCssClass = () => toggleLockedCssClass(true);\n\n/**\n *\n * @returns {Boolean}\n */\nexport const removeLockedCssClass = () => toggleLockedCssClass(false);\n","/**\n * Checks whether a given value is a valid number or not\n * @static\n * @private\n * @param {any} value The given value to be checked\n * @returns {Boolean} True if the given value is a number\n */\nexport const isNumber = (value) =>\n    typeof value === \"number\" && !isNaN(value) && isFinite(value);\n","import { isNumber } from \"./body-scroll.utils.mjs\";\n\n// scroll position saving closure\nlet scrollSaving = null;\n\n/**\n * Checks whether a given value is a valid scroll object or not\n * @example\n * isValidScrollPosition({top:0, left:100}); // true\n * isValidScrollPosition(null); // false\n * isValidScrollPosition({top:\"foo\", left:NaN}); // false\n * @static\n * @private\n * @param {Object} value The given value to be checked\n * @returns {Boolean} True if the given value is a valid scroll object\n */\nexport const isValidScrollPosition = (value) =>\n    typeof value === \"object\" && isNumber(value?.top) && isNumber(value?.left);\n\n/**\n * Formats a given scroll position object value, if malformed returns null\n * @static\n * @private\n * @param {Object} value The given value to be formatted\n * @returns {Object|null} The given value is returned if is a valid scroll position object, otherwise null is returned\n */\nexport const formatScrollPosition = (value) =>\n    isValidScrollPosition(value) ? value : null;\n\n/**\n * Restores a given valid scroll position object, if not passed possibly restores a previously saved scroll position object\n * @public\n * @param {Object} [scroll] The given scroll object to be restored\n * @returns {Object|null} The given value is returned if is a valid scroll position object, otherwise null is returned\n */\nexport const restoreScrollPosition = (scroll) => {\n    scroll = scroll !== undefined ? scroll : scrollSaving;\n    scroll = formatScrollPosition(scroll);\n\n    if (scroll) {\n        window.scrollTo(scroll.left, scroll.top);\n    }\n\n    return scroll;\n};\n\n/**\n * Saves a given valid scroll position object, if not passed saves the current body scroll position\n * @public\n * @param {Object} [scroll] The given scroll position object to be saved\n * @returns {Object|null} The given value is returned if is a valid scroll position object, otherwise null is returned\n */\nexport const saveScrollPosition = (scroll) => {\n    if (scroll === undefined) {\n        scroll = {\n            top: window.pageYOffset,\n            left: window.pageXOffset\n        };\n    }\n\n    scrollSaving = formatScrollPosition(scroll);\n\n    return scrollSaving;\n};\n\n/**\n * Returns the currently saved scroll position object\n * @public\n * @returns {Object|null} The currently saved scroll position object, null if nothing was saved\n */\nexport const getSavedScrollPosition = () => scrollSaving;\n\n/**\n * Returns the currently saved scroll position object\n * @public\n * @returns {Object|null} The currently saved scroll position object, null if nothing was saved\n */\nexport const clearSavedScrollPosition = () => (scrollSaving = null);\n","import {\n    isValidScrollPosition,\n    getSavedScrollPosition\n} from \"./body-scroll.scroll.mjs\";\nimport {\n    html,\n    head,\n    body,\n    styler,\n    addLockedCssClass,\n    removeLockedCssClass\n} from \"./body-scroll.client.mjs\";\n\n/**\n * Gets the current vertical scrollbar width size in px unit\n * @public\n * @returns {Number} The current vertical scrollbar width in px\n */\nexport const getVerticalScrollbarGap = () => {\n    // NOTE: right now this is the safest and more robust way to detect the real document scrollbar size (compatible with iOS pinch to zoom)\n    // bodyscroll is gonna change overflow property anyway, so we keep this not 100% clean approach for now\n\n    // clears possible body scroll lock state css strategies\n    const hasClassRemoved = removeLockedCssClass();\n\n    // caches current html element width\n    // NOTE: right now only getBoundingClientRect grant sub pixel measures, repaint would have been done anyway so...\n    var docWidth = html.getBoundingClientRect().width;\n\n    // fixes current body element width to avoid page jump due to overflow value change\n    body.style.width = body.getBoundingClientRect().width + \"px\";\n    // sets overflow property to hidden\n    html.style.overflowY = body.style.overflowY = \"hidden\";\n\n    // gets the actual scrollbar width comparing the cached html width to the current one with overflow hidden on\n    var scrollbarWidth = html.getBoundingClientRect().width - docWidth;\n\n    // cleans everything up\n    body.style.width = html.style.overflowY = body.style.overflowY = \"\";\n\n    // possibly re applies body scroll lock state css strategies\n    if (hasClassRemoved) {\n        addLockedCssClass();\n    }\n\n    // returns the vertical scrollbar width\n    return scrollbarWidth;\n};\n\n//\nexport const cssVarNamePosition = \"--body-scroll-lock-top-rect\";\nexport const cssVarNameGap = \"--body-scroll-lock-vertical-scrollbar-gap\";\n\n/**\n * Updates css variables to the current state\n * @public\n * @returns {void} Nothing\n */\nexport const updateCssVariables = () => {\n    // ensuring style presence, StyleSheet API throws otherwise\n    if (!body.contains(styler)) {\n        head.append(styler);\n    }\n\n    // only rule\n    const index = 0;\n\n    // clean up past rules\n    if (styler.sheet.cssRules[index]) {\n        styler.sheet.deleteRule(index);\n    }\n\n    // calculating scrollbar gap\n    const verticalScrollbarGap = getVerticalScrollbarGap();\n    // gets the current scroll position object saving or default\n    const scrollSaving = getSavedScrollPosition();\n    const scrollPosition = isValidScrollPosition(scrollSaving)\n        ? scrollSaving\n        : { top: 0, left: 0 };\n\n    // composes updated css variables rule\n    const rule = `:root {\n        ${cssVarNamePosition}: ${scrollPosition.top * -1}px;\n        ${cssVarNameGap}: ${verticalScrollbarGap}px;\n        ${cssVarNameGap}-round: ${Math.round(verticalScrollbarGap)}px;\n    }`;\n\n    // sets new rule up\n    styler.sheet.insertRule(rule, index);\n};\n","import {\n    dispatchEvent,\n    addLockedCssClass,\n    removeLockedCssClass\n} from \"./body-scroll.client.mjs\";\nimport {\n    isValidScrollPosition,\n    getSavedScrollPosition,\n    saveScrollPosition,\n    clearSavedScrollPosition,\n    restoreScrollPosition\n} from \"./body-scroll.scroll.mjs\";\nimport { updateCssVariables } from \"./body-scroll.style.mjs\";\n\n// lock state flag closure, true if is locked\nlet lockState = false;\n\n/**\n * Returns the current lock state as a boolean\n * @public\n * @returns {Boolean} True if body scroll is locked, false if not\n */\nexport const isLocked = () => lockState;\n\n/**\n * Locks the body scroll, saves current body scroll position (if not already saved) and updates css variables\n * @private\n * @returns {Boolean} True if the lock has been successfully done, false if not\n */\nexport const doLock = () => {\n    // don't lock when already locked, lock not done, returns false early\n    if (isLocked()) {\n        return false;\n    }\n\n    // sets the lock state to true\n    lockState = true;\n\n    // saves current scroll position if there's not another saving state\n    if (!isValidScrollPosition(getSavedScrollPosition())) {\n        saveScrollPosition({\n            top: window.pageYOffset,\n            left: window.pageXOffset\n        });\n    }\n\n    // calculates and applies :root css variables to grant body scroll lock css techniques\n    updateCssVariables();\n\n    // applies body scroll lock css techniques\n    addLockedCssClass();\n\n    // lock done, returns true\n    return true;\n};\n\n/**\n * Unlocks the body scroll, restores the scroll position previously saved and clears the saving\n * @private\n * @returns {Boolean} True if the unlock has been successfully done, false if not\n */\nexport const doUnlock = () => {\n    // don't unlock when already unlocked, unlock not done, returns false early\n    if (!isLocked()) {\n        return false;\n    }\n\n    // sets the lock state to false\n    lockState = false;\n\n    // clears body scroll lock css techniques that could prevent scroll restoration\n    removeLockedCssClass();\n\n    // restores previously saved scroll position\n    restoreScrollPosition(getSavedScrollPosition());\n\n    // clears the scroll position saving\n    clearSavedScrollPosition();\n\n    // unlock done, returns true\n    return true;\n};\n\n/**\n * Locks the body scroll\n * @public\n * @returns {void} Nothing\n */\nexport const lock = () => {\n    // returns early if lock itself hasn't been successful\n    if (!doLock()) {\n        return;\n    }\n\n    // dispatch a \"lock done\" notification\n    dispatchEvent(\"lock\");\n};\n\n/**\n * Unlocks the body scroll\n * @public\n * @returns {void} Nothing\n */\nexport const unlock = () => {\n    // returns early if unlock itself hasn't been successful\n    if (!doUnlock()) {\n        return;\n    }\n\n    // dispatch an \"unlock done\" notification\n    dispatchEvent(\"unlock\");\n};\n","import { dispatchEvent } from \"./body-scroll.client.mjs\";\nimport { doLock, doUnlock } from \"./body-scroll.state.mjs\";\n\nconst eventName = \"resize\";\n\nexport const debounceTime = 150;\n\nlet id = null;\n\n/**\n * Handles (debounced) browser resize (implicity includes a possible device orientation change),\n * re-applies a consistent lock state when body scroll is locked\n * and only then it dispatches a custom event\n * @returns {void} Nothing\n */\nconst eventHandler = () => {\n    clearTimeout(id);\n\n    id = setTimeout(() => {\n        // toggling body scroll lock\n\n        // gets rid of possible body scroll locked state\n        // avoids useless computations when scroll is not locked\n        if (!doUnlock()) {\n            return;\n        }\n\n        // recalculates and rewrites lock state\n        doLock();\n\n        // dispatch a \"resize during lock\" notification\n        dispatchEvent(eventName);\n    }, debounceTime);\n};\n\n// passive as only option\nconst options = true;\n\n/**\n * Attach the resize the handler to a browser resize event listener\n * @returns {void} Nothing\n */\nexport const addResizeEventListener = () =>\n    window.addEventListener(eventName, eventHandler, options);\n\n/**\n * Detach the resize the handler to a browser resize event listener\n * @returns {void} Nothing\n */\nexport const removeResizeEventListener = () =>\n    window.removeEventListener(eventName, eventHandler, options);\n","import { lock, unlock, isLocked } from \"./body-scroll.state.mjs\";\nimport {\n    updateCssVariables,\n    getVerticalScrollbarGap\n} from \"./body-scroll.style.mjs\";\nimport {\n    restoreScrollPosition,\n    saveScrollPosition,\n    getSavedScrollPosition\n} from \"./body-scroll.scroll.mjs\";\nimport {\n    addResizeEventListener,\n    removeResizeEventListener\n} from \"./body-scroll.resize.mjs\";\n\n// handling resize (attacching event listener) on library inclusion\naddResizeEventListener();\n\n// public API\nexport default {\n    // main\n    lock: lock,\n    unlock: unlock,\n    isLocked: isLocked,\n    // extras\n    updateCssVariables: updateCssVariables,\n    getVerticalScrollbarGap: getVerticalScrollbarGap,\n    restoreScrollPosition: restoreScrollPosition,\n    saveScrollPosition: saveScrollPosition,\n    getSavedScrollPosition: getSavedScrollPosition,\n    addResizeEventListener: addResizeEventListener,\n    removeResizeEventListener: removeResizeEventListener\n};\n"],"names":["head","document","body","html","documentElement","styler","createElement","eventNamePrefix","dispatchEvent","messageName","window","CustomEvent","lockedStateCssClass","toggleLockedCssClass","bool","hadClass","classList","contains","toggle","addLockedCssClass","removeLockedCssClass","isNumber","value","isNaN","isFinite","scrollSaving","isValidScrollPosition","top","left","formatScrollPosition","restoreScrollPosition","scroll","undefined","scrollTo","saveScrollPosition","pageYOffset","pageXOffset","getSavedScrollPosition","clearSavedScrollPosition","getVerticalScrollbarGap","hasClassRemoved","docWidth","getBoundingClientRect","width","style","overflowY","scrollbarWidth","cssVarNamePosition","cssVarNameGap","updateCssVariables","append","index","sheet","cssRules","deleteRule","verticalScrollbarGap","scrollPosition","rule","Math","round","insertRule","lockState","isLocked","doLock","doUnlock","lock","unlock","eventName","debounceTime","id","eventHandler","clearTimeout","setTimeout","options","addResizeEventListener","addEventListener","removeResizeEventListener","removeEventListener"],"mappings":"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"}