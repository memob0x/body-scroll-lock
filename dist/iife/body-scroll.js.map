{"version":3,"file":"body-scroll.js","sources":["../../src/body-scroll.client.mjs","../../src/body-scroll.utils.mjs","../../src/body-scroll.scroll.mjs","../../src/body-scroll.style.mjs","../../src/body-scroll.state.mjs","../../src/body-scroll.resize.mjs","../../src/body-scroll.mjs"],"sourcesContent":["// caching involved dom elements\nexport const html = document.documentElement;\nexport const head = document.head;\n\n// all the custom events dispatched by the library will start with this string\n// in order to avoid name clashing\nexport const eventNamePrefix = \"bodyscroll\";\n\n/**\n * Dispatches the given message name in jQuery.Event\n * @private\n * @param {HTMLElement} element\n * @param {String} messageName The given message name to be dispatched\n * @returns {void} Nothing\n */\nexport const dispatchEvent = (element, messageName) =>\n    typeof window.CustomEvent === \"function\"\n        ? element?.dispatchEvent(\n              new CustomEvent(`${eventNamePrefix}${messageName}`)\n          )\n        : () => {};\n","/**\n * Checks whether a given value is a valid number or not\n * @static\n * @private\n * @param {any} value The given value to be checked\n * @returns {Boolean} True if the given value is a number\n */\nexport const isNumber = (value) =>\n    typeof value === \"number\" && !isNaN(value) && isFinite(value);\n","import { isNumber } from \"./body-scroll.utils.mjs\";\n\n// scroll position saving closure\nconst scrollSaving = new WeakMap();\n\n/**\n * Checks whether a given value is a valid scroll object or not\n * @example\n * isValidScrollPosition({top:0, left:100}); // true\n * isValidScrollPosition(null); // false\n * isValidScrollPosition({top:\"foo\", left:NaN}); // false\n * @static\n * @private\n * @param {Object} value The given value to be checked\n * @returns {Boolean} True if the given value is a valid scroll object\n */\nexport const isValidScrollPosition = (value) =>\n    typeof value === \"object\" && isNumber(value?.top) && isNumber(value?.left);\n\n/**\n * Formats a given scroll position object value, if malformed returns null\n * @static\n * @private\n * @param {Object} value The given value to be formatted\n * @returns {Object|null} The given value is returned if is a valid scroll position object, otherwise null is returned\n */\nexport const formatScrollPosition = (value) =>\n    isValidScrollPosition(value) ? value : null;\n\n/**\n * Restores a given valid scroll position object, if not passed possibly restores a previously saved scroll position object\n * @public\n * @param {HTMLElement} element\n * @param {Object} [scroll] The given scroll object to be restored\n * @returns {Object|null} The given value is returned if is a valid scroll position object, otherwise null is returned\n */\nexport const restoreScrollPosition = (element, scroll) => {\n    scroll = scroll !== undefined ? scroll : getSavedScrollPosition(element);\n    scroll = formatScrollPosition(scroll);\n\n    if (scroll) {\n        element?.scrollTo(scroll.left, scroll.top);\n    }\n\n    return scroll;\n};\n\n/**\n * Saves a given valid scroll position object, if not passed saves the current body scroll position\n * @public\n * @param {HTMLElement} element\n * @param {Object} [scroll] The given scroll position object to be saved\n * @returns {Object|null} The given value is returned if is a valid scroll position object, otherwise null is returned\n */\nexport const saveScrollPosition = (element, scroll) => {\n    if (scroll === undefined) {\n        scroll = {\n            top: element?.scrollTop ?? 0,\n            left: element?.scrollLeft ?? 0\n        };\n    }\n\n    scroll = formatScrollPosition(scroll);\n\n    scrollSaving.set(element, scroll);\n\n    return scroll;\n};\n\n/**\n * Returns the currently saved scroll position object\n * @public\n * @param {HTMLElement} element\n * @returns {Object|null} The currently saved scroll position object, null if nothing was saved\n */\nexport const getSavedScrollPosition = (element) => scrollSaving.get(element) ?? null;\n\n/**\n * Returns the currently saved scroll position object\n * @public\n * @param {HTMLElement} element\n * @returns {Boolean} Whether the scroll saving deletion has been successful or not\n */\nexport const clearSavedScrollPosition = (element) => scrollSaving.delete(element);\n","import {\n    isValidScrollPosition,\n    getSavedScrollPosition\n} from \"./body-scroll.scroll.mjs\";\nimport { head } from \"./body-scroll.client.mjs\";\n\nconst getBoundingProp = (element, prop) => element?.getBoundingClientRect()?.[prop] ?? 0;\n\nconst getWidth = (element) => getBoundingProp(element, 'width');\n\nconst getHeight = (element) => getBoundingProp(element, 'height');\n\n/**\n * Gets the current vertical scrollbar width size in px unit\n * @public\n * @returns {Object} The current vertical scrollbar width and the horizontal scrollbar height in px\n */\nexport const getScrollbarsGaps = (element) => {\n    const styles = element?.style ?? {};\n\n    // NOTE: right now this is the safest and more robust way to detect the real document scrollbar size (compatible with iOS pinch to zoom)\n    // bodyscroll is gonna change overflow property anyway, so we keep this not 100% clean approach for now\n\n    styles.overflow = \"\";\n\n    // clears possible body scroll lock state css strategies\n    const wasLocked = removeLockedCssClass(element);\n\n    // caches current element sizes\n    // NOTE: right now only getBoundingClientRect grant sub pixel measures, repaint would have been done anyway so...\n    const width = getWidth(element);\n    const height = getHeight(element);\n\n    // sets overflow property to hidden\n    styles.overflow = \"hidden\";\n\n    // gets the actual scrollbar width comparing the cached element width to the current one with overflow hidden on\n    const vertical = getWidth(element) - width;\n    const horizontal = getHeight(element) - height;\n\n    // cleans everything up\n    styles.overflow = \"\";\n\n    // possibly re applies body scroll lock state css strategies\n    if (wasLocked) {\n        addLockedCssClass(element);\n    }\n\n    // returns the vertical scrollbar width and horizontal scrollbar height\n    return { vertical, horizontal };\n};\n\n//\nconst stylers = new WeakMap();\n\n//\nexport const cssVarNamePositionTop = \"--body-scroll-lock-top-rect\";\nexport const cssVarNamePositionLeft = \"--body-scroll-lock-left-rect\";\nexport const cssVarNameGapVertical = \"--body-scroll-lock-vertical-scrollbar-gap\";\nexport const cssVarNameGapHorizontal = \"--body-scroll-lock-horizontal-scrollbar-gap\";\n\nconst dataAttrName = 'data-body-scroll-lock';\n\n/**\n * \n * @param element \n */\nexport const clearStyle = (element) => {\n    stylers.get(element)?.remove();\n\n    stylers.delete(element);\n\n    element.removeAttribute(dataAttrName);\n};\n\n/**\n * Updates css variables to the current state\n * @public\n * @returns {void} Nothing\n */\nexport const updateCssVariables = (element) => {\n    // ensuring style tag reference existance\n    if (!stylers.has(element)) {\n        stylers.set(element, document.createElement('style'));\n    }\n\n    // getting style tag reference\n    const styler = stylers.get(element);\n\n    // ensuring style tag dom presence, StyleSheet API throws otherwise\n    if (!head.contains(styler)) {\n        head.append(styler);\n    }\n\n    // ensuring data attr based unique selector\n    if (!element?.matches(`[${dataAttrName}]`)) {\n        element?.setAttribute(dataAttrName, Date.now());\n    }\n\n    // only rule\n    const index = 0;\n\n    // clean up past rules\n    if (styler.sheet.cssRules[index]) {\n        styler.sheet.deleteRule(index);\n    }\n\n    // calculating scrollbar gap\n    const scrollbarsGaps = getScrollbarsGaps(element);\n    // gets the current scroll position object saving or default\n    const scrollSaving = getSavedScrollPosition(element);\n    const scrollPosition = isValidScrollPosition(scrollSaving)\n        ? scrollSaving\n        : { top: 0, left: 0 };\n\n    // composes updated css variables rule\n    const rule = `[${dataAttrName}=\"${element?.getAttribute(dataAttrName)}\"] {\n        ${cssVarNamePositionTop}: ${scrollPosition.top * -1}px;\n        ${cssVarNamePositionLeft}: ${scrollPosition.left * -1}px;\n\n        ${cssVarNameGapVertical}: ${scrollbarsGaps.vertical}px;\n        ${cssVarNameGapHorizontal}: ${scrollbarsGaps.horizontal}px;\n        \n        ${cssVarNameGapVertical}-round: ${Math.round(scrollbarsGaps.vertical)}px;\n        ${cssVarNameGapHorizontal}-round: ${Math.round(scrollbarsGaps.horizontal)}px;\n    }`;\n\n    // sets new rule up\n    styler.sheet.insertRule(rule, index);\n};\n\n//\nexport const lockedStateCssClass = \"body-scroll-lock\";\n\n/**\n * Toggles the locked state css class to html element\n * @param {HTMLElement} element\n * @param {Boolean} bool Whether the class should be added ro removed\n * @returns {Boolean} Whether the removal or the\n */\nconst toggleLockedCssClass = (element, bool) => {\n    const hadClass = !!element?.classList?.contains(lockedStateCssClass);\n\n    bool = bool ?? !hadClass;\n\n    element?.classList?.toggle(lockedStateCssClass, bool);\n\n    return (bool && !hadClass) || (!bool && hadClass);\n};\n\n/**\n * \n * @param {HTMLElement} element\n * @returns {Boolean}\n */\nexport const addLockedCssClass = (element) => toggleLockedCssClass(element, true);\n\n/**\n * \n * @param {HTMLElement} element\n * @returns {Boolean}\n */\nexport const removeLockedCssClass = (element) => toggleLockedCssClass(element, false);\n","import { dispatchEvent } from \"./body-scroll.client.mjs\";\nimport {\n    isValidScrollPosition,\n    getSavedScrollPosition,\n    saveScrollPosition,\n    clearSavedScrollPosition,\n    restoreScrollPosition\n} from \"./body-scroll.scroll.mjs\";\nimport {\n    updateCssVariables, \n    addLockedCssClass,\n    removeLockedCssClass\n} from \"./body-scroll.style.mjs\";\n\n// lock state flag closure, true if is locked\nconst lockStates = new WeakMap();\n\n/**\n * Returns the current lock state as a boolean\n * @public\n * @returns {Boolean} True if body scroll is locked, false if not\n */\nexport const isLocked = (element) => !!lockStates.get(element);\n\n/**\n * Locks the body scroll, saves current body scroll position (if not already saved) and updates css variables\n * @private\n * @returns {Boolean} True if the lock has been successfully done, false if not\n */\nexport const doLock = (element) => {\n    // don't lock when already locked, lock not done, returns false early\n    if (isLocked(element)) {\n        return false;\n    }\n\n    // sets the lock state to true\n    lockStates.set(element, true);\n\n    // saves current scroll position if there's not another saving state\n    if (!isValidScrollPosition(getSavedScrollPosition(element))) {\n        saveScrollPosition(element);\n    }\n\n    // calculates and applies css variables to grant scroll lock css techniques\n    updateCssVariables(element);\n\n    // applies body scroll lock css techniques\n    addLockedCssClass(element);\n\n    // lock done, returns true\n    return true;\n};\n\n/**\n * Unlocks the body scroll, restores the scroll position previously saved and clears the saving\n * @private\n * @returns {Boolean} True if the unlock has been successfully done, false if not\n */\nexport const doUnlock = (element) => {\n    // don't unlock when already unlocked, unlock not done, returns false early\n    if (!isLocked(element)) {\n        return false;\n    }\n\n    // sets the lock state to false\n    lockStates.set(element, false);\n\n    // clears body scroll lock css techniques that could prevent scroll restoration\n    removeLockedCssClass(element);\n\n    // restores previously saved scroll position\n    restoreScrollPosition(element, getSavedScrollPosition(element));\n\n    // clears the scroll position saving\n    clearSavedScrollPosition(element);\n\n    // unlock done, returns true\n    return true;\n};\n\n/**\n * Locks the body scroll\n * @public\n * @returns {void} Nothing\n */\nexport const lock = (element) => {\n    // returns early if lock itself hasn't been successful\n    if (!doLock(element)) {\n        return;\n    }\n\n    // dispatch a \"lock done\" notification\n    dispatchEvent(element, \"lock\");\n};\n\n/**\n * Unlocks the body scroll\n * @public\n * @returns {void} Nothing\n */\nexport const unlock = (element) => {\n    // returns early if unlock itself hasn't been successful\n    if (!doUnlock(element)) {\n        return;\n    }\n\n    // dispatch an \"unlock done\" notification\n    dispatchEvent(element, \"unlock\");\n};\n","import { dispatchEvent } from \"./body-scroll.client.mjs\";\nimport { doLock, doUnlock } from \"./body-scroll.state.mjs\";\n\nconst eventName = \"resize\";\n\nexport const debounceTime = 150;\n\nlet id = null;\n\n/**\n * Handles (debounced) browser resize (implicity includes a possible device orientation change),\n * re-applies a consistent lock state when body scroll is locked\n * and only then it dispatches a custom event\n * @param {HTMLElement} element\n * @returns {void} Nothing\n */\nconst eventHandler = (element) => {\n    clearTimeout(id);\n\n    id = setTimeout(() => {\n        // toggling body scroll lock\n\n        // gets rid of possible body scroll locked state\n        // avoids useless computations when scroll is not locked\n        if (!doUnlock(element)) {\n            return;\n        }\n\n        // recalculates and rewrites lock state\n        doLock(element);\n\n        // dispatch a \"resize during lock\" notification\n        dispatchEvent(element, eventName);\n    }, debounceTime);\n};\n\n// passive as only option\nconst options = true;\n\n/**\n * Attach the resize the handler to a browser resize event listener\n * @param {HTMLElement} element\n * @returns {void} Nothing\n */\nexport const addResizeEventListener = (element) =>\n    window.addEventListener(eventName, eventHandler(element), options);\n\n/**\n * Detach the resize the handler to a browser resize event listener\n * @param {HTMLElement} element\n * @returns {void} Nothing\n */\nexport const removeResizeEventListener = (element) =>\n    window.removeEventListener(eventName, eventHandler(element), options);\n","import { html } from \"./body-scroll.client.mjs\";\nimport { lock, unlock, isLocked } from \"./body-scroll.state.mjs\";\nimport {\n    updateCssVariables,\n    getScrollbarsGaps,\n    clearStyle\n} from \"./body-scroll.style.mjs\";\nimport {\n    restoreScrollPosition,\n    saveScrollPosition,\n    getSavedScrollPosition\n} from \"./body-scroll.scroll.mjs\";\nimport {\n    addResizeEventListener,\n    removeResizeEventListener\n} from \"./body-scroll.resize.mjs\";\n\nexport default class {\n    /**\n     * \n     * @param element \n     */\n    constructor(element = html){\n        this.#element = element;\n\n        this.update();\n\n        addResizeEventListener(this.#element);\n    }\n\n    #element;\n\n    /**\n     * \n     */\n    get state(){\n        return isLocked(this.#element);\n    }\n\n    /**\n     * \n     */\n    get scroll(){\n        return getSavedScrollPosition(this.#element);\n    }\n\n    /**\n     * \n     */\n    get scrollbar(){\n        return getScrollbarsGaps(this.#element);\n    }\n    \n    /**\n     * \n     */\n    destroy(){\n        this.unlock();\n\n        clearStyle(this.#element);\n\n        removeResizeEventListener(this.#element);\n\n        const validElement = !!this.#element;\n\n        this.#element = null;\n        \n        return validElement;\n    }\n\n    /**\n     * \n     */\n    lock(){\n        return lock(this.#element);\n    }\n\n    /**\n     * \n     */\n    unlock(){\n        return unlock(this.#element);\n    }\n\n    /**\n     * \n     */\n    update(){\n        return updateCssVariables(this.#element);\n    }\n\n    /**\n     * \n     */\n    save(){\n        return saveScrollPosition(this.#element);\n    }\n\n    /**\n     * \n     */\n    restore(){\n        return restoreScrollPosition(this.#element);\n    }\n};\n"],"names":["html","document","documentElement","head","eventNamePrefix","dispatchEvent","element","messageName","window","CustomEvent","isNumber","value","isNaN","isFinite","scrollSaving","WeakMap","isValidScrollPosition","top","left","formatScrollPosition","restoreScrollPosition","scroll","undefined","getSavedScrollPosition","scrollTo","saveScrollPosition","scrollTop","scrollLeft","set","get","clearSavedScrollPosition","getBoundingProp","prop","getBoundingClientRect","getWidth","getHeight","getScrollbarsGaps","styles","style","overflow","wasLocked","removeLockedCssClass","width","height","vertical","horizontal","addLockedCssClass","stylers","cssVarNamePositionTop","cssVarNamePositionLeft","cssVarNameGapVertical","cssVarNameGapHorizontal","dataAttrName","clearStyle","remove","removeAttribute","updateCssVariables","has","createElement","styler","contains","append","matches","setAttribute","Date","now","index","sheet","cssRules","deleteRule","scrollbarsGaps","scrollPosition","rule","getAttribute","Math","round","insertRule","lockedStateCssClass","toggleLockedCssClass","bool","hadClass","classList","toggle","lockStates","isLocked","doLock","doUnlock","lock","unlock","eventName","debounceTime","id","eventHandler","clearTimeout","setTimeout","options","addResizeEventListener","addEventListener","removeResizeEventListener","removeEventListener","update","validElement"],"mappings":"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"}